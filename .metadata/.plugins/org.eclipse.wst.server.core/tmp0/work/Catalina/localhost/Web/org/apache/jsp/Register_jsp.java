/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.38
 * Generated at: 2019-04-01 08:35:08 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class Register_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"ISO-8859-1\">\r\n");
      out.write("<style type=\"text/css\">\r\n");
      out.write("p.a\r\n");
      out.write("{\r\n");
      out.write("\tfont-size: 50px;\r\n");
      out.write("\tcolor: white;\r\n");
      out.write("\tfont-family: fantasy;\r\n");
      out.write("}\r\n");
      out.write("#inputstyle\r\n");
      out.write("{\r\n");
      out.write("width: 100%;\r\n");
      out.write("\theight: 42px;\r\n");
      out.write("\ttext-indent: 2.5rem;\r\n");
      out.write("\t}\r\n");
      out.write("</style>\r\n");
      out.write("\t\r\n");
      out.write("<title>注册信息</title>\r\n");
      out.write("<script >\r\n");
      out.write("\tfunction login()\r\n");
      out.write("\t{\r\n");
      out.write("\r\n");
      out.write("\t\tvar name = document.getElementById('useid');\r\n");
      out.write("\t\tvar  pass = document.getElementById('userpass')\r\n");
      out.write("\t\tvar email = document.getElementById('myemail')\r\n");
      out.write("\t\t//var reg = new RegExp(\"*@*.com\")\r\n");
      out.write("\t\tvar reg = new RegExp(\"^[a-z0-9]+([._\\\\-]*[a-z0-9])*@([a-z0-9]+[-a-z0-9]*[a-z0-9]+.){1,63}[a-z0-9]+$\")\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tif(name.value==\"\"||name.value==null)\r\n");
      out.write("\t\t\t{\r\n");
      out.write("\t\t\talert(\"请输入用户名\");\r\n");
      out.write("\t\t\treturn false;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\telse if(pass.value.length==0)\r\n");
      out.write("\t\t\t{alert(\"请输入密码\")\r\n");
      out.write("\t\t\treturn false;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\telse if(!reg.test(email.value))\r\n");
      out.write("\t\t\t{\r\n");
      out.write("\t\t\talert(\"邮箱格式不正确\")\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\telse {\r\n");
      out.write("\t\t\treturn true;\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t}\r\n");
      out.write("</script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("<table style=\"background-image: url('image/header_bg.jpg');width: 100%\" >\r\n");
      out.write("<tr>\r\n");
      out.write("<th><!--  <img src=\"./image/logo.png\" style=\"padding-left: 150px\">--></th>\r\n");
      out.write("\t<th >\r\n");
      out.write("\t<p class=\"a\" style=\"padding-top: 30px;padding-bottom: 0px;margin-bottom: 0px\">\r\n");
      out.write("\t<font face=\"华文云彩\">文件分享平台</font>\r\n");
      out.write("\t</th>\r\n");
      out.write("\t</table>\r\n");
      out.write("\t<form action=\"\" >\r\n");
      out.write("\t<table align=\"center\" style=\"margin-top: 150px\">\r\n");
      out.write("\t\r\n");
      out.write("\t<tr>\r\n");
      out.write("\t<td>姓名:<input stype=\"text\" name=\"userid\" id =\"useid\" value=\"\" class=\"inputstyle\"></p></td>\r\n");
      out.write("\t</tr>\r\n");
      out.write("\t<tr>\r\n");
      out.write("\t<td>密码:<input type=\"password\" name=\"userpass\" id =\"userpass\" value=\"\"></td>\r\n");
      out.write("\t</tr>\r\n");
      out.write("\t<tr>\r\n");
      out.write("\t<td>邮箱:<input type=\"text\" name=\"myemail\" id=\"myemail\"></td>\r\n");
      out.write("\t<tr>\r\n");
      out.write("\t<td>性别：\r\n");
      out.write("\t男：<input type=\"radio\" name=\"sex\" value=\"male\" checked=\"checked\"></td>\r\n");
      out.write("\t<td>女：<input type=\"radio\" name=\"sex\" value=\"female\"></td>\r\n");
      out.write("\t</tr>\r\n");
      out.write("\t\r\n");
      out.write("\t<tr>\r\n");
      out.write("\t <td> 出生日期<input type=\"date\" name=\"birthdate\"></td>\r\n");
      out.write("\t</tr>\r\n");
      out.write("\t<tr>\r\n");
      out.write("\t<td><input type=\"button\" value=\"提交\"  onclick=\"login()\"></td>\r\n");
      out.write("\t</tr>\r\n");
      out.write("\t\r\n");
      out.write("\t\r\n");
      out.write("\t</form>\r\n");
      out.write("\t</table>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
